from datetime import datetime as dt
import time


def handle(event, db, group_api, user_pool, chat_config):
    if db.find({'user_id': event.from_id}) is not None:
        group_api.messages.send(peer_id=event.peer_id, random_id=0,
                                message='–≤—ã —É–∂–µ –∏–º–µ–µ—Ç–µ –ø–∞—Å–ø–æ—Ä—Ç '
                                        '–∏ —è–≤–ª—è–µ—Ç–µ—Å—å –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–º –Ω–∞—à–µ–π –±–µ—Å–µ–¥—ã.')
    else:
        user_info = group_api.users.get(user_ids=event.from_id)[0]
        user_conversation_info = [x for x in group_api.messages.getConversationMembers(
            peer_id=event.peer_id)['items'] if user_info['id'] == x['member_id']][0]
        join_date = dt.fromtimestamp(user_conversation_info['join_date'])

        object_id = db.add({
            'user_id': user_info['id'],
            'first_name': user_info['first_name'],
            'last_name': user_info['last_name'],
            'reg_date': time.strftime('%H:%M %d.%m.%y'),
            'join_date': join_date.strftime('%H:%M %d.%m.%y'),
            'invited_by': f'id{user_conversation_info["invited_by"]}',
            'role': '–≥—Ä–∞–∂–¥–∞–Ω–∏–Ω –±–µ—Å–µ–¥—ã'
        })
        group_api.messages.send(peer_id=event.peer_id, random_id=0,
                                message='‚ú® –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üî∞\n'
                                        '| —Ç–µ–ø–µ—Ä—å –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–º –Ω–∞—à–µ–π –±–µ—Å–µ–¥—ã.\n'
                                        '| –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Å–∏—Å—Ç–µ–º–µ –ø–∞—Å–ø–æ—Ä—Ç–æ–≤ –≤ —Å—Ç–∞—Ç—å–µ –Ω–∏–∂–µ.',
                                attachment='article-206810547_87147_99f3ad8e89d2b1dad3')
        group_api.messages.send(chat_id=chat_config['group_archive_id'], random_id=0, message=f'#new_passport\n@id{event.from_id} registered a passport.\n\n#{object_id}')
        for user_object in user_pool.user_objects:
            if user_object['uid'] == chat_config['owner_id']:
                message_id = user_object['api'].messages.send(chat_id=chat_config['user_ar—Åhive_id'], random_id=0, message=f'!role [id{event.from_id}|{user_info["first_name"]}] 0')
                user_object['api'].messages.delete(message_id=message_id, delete_for_all=True)
